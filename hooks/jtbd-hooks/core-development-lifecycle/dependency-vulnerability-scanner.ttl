@prefix ex: <http://example.org/> .
@prefix gv: <https://gitvan.dev/ontology#> .
@prefix gh: <https://gitvan.dev/graph-hook#> .
@prefix op: <https://gitvan.dev/op#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

# Dependency Vulnerability Scanner Hook - JTBD #2
# "I want to know immediately when dependencies have security vulnerabilities"

ex:dependency-vulnerability-scanner-hook rdf:type gh:Hook ;
    gv:title "Dependency Vulnerability Scanner" ;
    gh:hasPredicate ex:dependency-vulnerability-predicate ;
    gh:orderedPipelines ex:dependency-vulnerability-pipeline .

# SELECTThreshold Predicate - "Threshold" Sensor
# Triggers when vulnerability count exceeds threshold
ex:dependency-vulnerability-predicate rdf:type gh:SELECTThreshold ;
    gh:queryText """
        PREFIX gv: <https://gitvan.dev/ontology#>
        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        
        SELECT (COUNT(?vulnerability) AS ?vulnCount) WHERE {
            ?dependency rdf:type gv:Dependency .
            ?dependency gv:hasVulnerability ?vulnerability .
            ?vulnerability gv:severity ?severity .
            FILTER(?severity IN ("high", "critical"))
        }
    """ ;
    gh:threshold 0 ;
    gh:operator ">" ;
    gh:description "Triggers when any high or critical vulnerabilities are detected" .

# Workflow Pipeline
ex:dependency-vulnerability-pipeline rdf:type op:Pipeline ;
    op:steps ex:scan-dependencies, ex:analyze-vulnerabilities, ex:notify-security-team, ex:update-security-dashboard .

# Step 1: Scan Dependencies
ex:scan-dependencies rdf:type gv:SparqlStep ;
    gv:text """
        PREFIX gv: <https://gitvan.dev/ontology#>
        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        
        SELECT ?dependency ?vulnerability ?severity ?cve ?description ?version WHERE {
            ?dependency rdf:type gv:Dependency .
            ?dependency gv:hasVulnerability ?vulnerability .
            ?vulnerability gv:severity ?severity .
            ?vulnerability gv:cve ?cve .
            ?vulnerability gv:description ?description .
            ?dependency gv:version ?version .
            FILTER(?severity IN ("high", "critical"))
        } ORDER BY ?severity DESC, ?dependency
    """ ;
    gv:outputMapping '{"vulnerabilities": "results", "vulnCount": "results.length"}' .

# Step 2: Analyze Vulnerabilities
ex:analyze-vulnerabilities rdf:type gv:TemplateStep ;
    gv:text """
        # Dependency Vulnerability Scanner Report
        
        **Generated:** {{ "now" | date("YYYY-MM-DD HH:mm:ss") }}  
        **Hook:** Dependency Vulnerability Scanner (JTBD #2)  
        **Status:** ðŸš¨ VULNERABILITIES DETECTED  
        **Vulnerability Count:** {{ vulnCount }}
        
        ## Vulnerabilities Detected
        
        {% for vuln in vulnerabilities %}
        ### {{ vuln.dependency.value }} ({{ vuln.version.value }})
        - **CVE:** {{ vuln.cve.value }}
        - **Severity:** {{ vuln.severity.value }}
        - **Description:** {{ vuln.description.value }}
        
        {% endfor %}
        
        ## Security Impact
        - **Critical Vulnerabilities:** {{ vulnerabilities | selectattr('severity.value', 'equalto', 'critical') | list | length }}
        - **High Vulnerabilities:** {{ vulnerabilities | selectattr('severity.value', 'equalto', 'high') | list | length }}
        - **Dependencies Affected:** {{ vulnerabilities | map(attribute='dependency.value') | unique | list | length }}
        
        ## Immediate Actions Required
        - Update vulnerable dependencies to patched versions
        - Review security advisories for each CVE
        - Consider temporary workarounds if updates unavailable
        - Notify security team of critical findings
        
        ---
        *This report was automatically generated by the Dependency Vulnerability Scanner Hook*
    """ ;
    gv:filePath "./reports/jtbd/security/dependency-vulnerability-scanner-{{ 'now' | date('YYYY-MM-DD-HH-mm-ss') }}.md" ;
    gv:dependsOn ex:scan-dependencies .

# Step 3: Notify Security Team
ex:notify-security-team rdf:type gv:HttpStep ;
    gv:httpUrl "https://hooks.slack.com/services/YOUR/SECURITY/SLACK/WEBHOOK" ;
    gv:httpMethod "POST" ;
    gv:headers '{"Content-Type": "application/json"}' ;
    gv:body """
        {
            "text": "ðŸ”’ Dependency Vulnerability Alert",
            "attachments": [
                {
                    "color": "danger",
                    "title": "Security Vulnerabilities Detected",
                    "text": "{{ vulnCount }} vulnerabilities found in dependencies",
                    "fields": [
                        {% for vuln in vulnerabilities[:5] %}
                        {
                            "title": "{{ vuln.dependency.value }}",
                            "value": "CVE: {{ vuln.cve.value }}\\nSeverity: {{ vuln.severity.value }}",
                            "short": true
                        }{% if not loop.last %},{% endif %}
                        {% endfor %}
                    ],
                    "footer": "GitVan Knowledge Hook Engine",
                    "ts": {{ "now" | date("X") }}
                }
            ]
        }
    """ ;
    gv:dependsOn ex:analyze-vulnerabilities ;
    gv:timeout 15000 .

# Step 4: Update Security Dashboard
ex:update-security-dashboard rdf:type gv:TemplateStep ;
    gv:text """
        # Security Dashboard
        
        **Last Updated:** {{ "now" | date("YYYY-MM-DD HH:mm:ss") }}  
        **Status:** ðŸš¨ VULNERABILITIES DETECTED  
        **Vulnerability Count:** {{ vulnCount }}
        
        ## Security Metrics
        - **Critical Vulnerabilities:** {{ vulnerabilities | selectattr('severity.value', 'equalto', 'critical') | list | length }}
        - **High Vulnerabilities:** {{ vulnerabilities | selectattr('severity.value', 'equalto', 'high') | list | length }}
        - **Dependencies Affected:** {{ vulnerabilities | map(attribute='dependency.value') | unique | list | length }}
        
        ## Recent Vulnerabilities
        {% for vuln in vulnerabilities[:10] %}
        - **{{ vuln.dependency.value }}** ({{ vuln.severity.value }}): {{ vuln.cve.value }}
        {% endfor %}
        
        ## Security Actions Required
        - Update vulnerable dependencies immediately
        - Review security advisories
        - Implement security patches
        - Consider dependency alternatives
        
        ---
        *This dashboard is automatically updated by the Dependency Vulnerability Scanner Hook*
    """ ;
    gv:filePath "./dashboards/security.md" ;
    gv:dependsOn ex:notify-security-team .
