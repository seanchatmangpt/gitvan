@prefix ex: <http://example.org/> .
@prefix gv: <https://gitvan.dev/ontology#> .
@prefix gh: <https://gitvan.dev/graph-hook#> .
@prefix op: <https://gitvan.dev/op#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

# DESCRIBE Predicate Example - Resource Inspector
# "I want to automatically inspect and document resources in my knowledge graph"

ex:resource-inspector-hook rdf:type gh:Hook ;
    gv:title "Resource Inspector" ;
    gh:hasPredicate ex:resource-inspector-predicate ;
    gh:orderedPipelines ex:resource-inspector-pipeline .

# DESCRIBE Predicate - Describes resources in detail
ex:resource-inspector-predicate rdf:type gh:DESCRIBEPredicate ;
    gh:queryText """
        PREFIX gv: <https://gitvan.dev/ontology#>
        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        
        DESCRIBE ?resource WHERE {
            ?resource rdf:type gv:Component .
            ?resource gv:hasComplexity ?complexity .
            FILTER(?complexity > 5)
        }
    """ ;
    gh:resourcePattern "https://gitvan.dev/component/*" ;
    gh:description "Describes complex components in detail" .

# Resource Inspector Pipeline
ex:resource-inspector-pipeline rdf:type op:Pipeline ;
    op:steps ex:identify-complex-resources, ex:describe-resources, ex:generate-documentation, ex:update-resource-registry .

# Step 1: Identify Complex Resources
ex:identify-complex-resources rdf:type gv:SparqlStep ;
    gv:text """
        PREFIX gv: <https://gitvan.dev/ontology#>
        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        
        SELECT ?resource ?complexity ?dependencies WHERE {
            ?resource rdf:type gv:Component .
            ?resource gv:hasComplexity ?complexity .
            FILTER(?complexity > 5)
            
            OPTIONAL {
                SELECT ?resource (COUNT(?dep) AS ?dependencies) WHERE {
                    ?resource gv:hasDependency ?dep .
                } GROUP BY ?resource
            }
        } ORDER BY DESC(?complexity)
    """ ;
    gv:outputMapping '{"complexResources": "results", "resourceCount": "results.length"}' .

# Step 2: Describe Resources
ex:describe-resources rdf:type gv:SparqlStep ;
    gv:text """
        PREFIX gv: <https://gitvan.dev/ontology#>
        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        
        DESCRIBE ?resource WHERE {
            ?resource rdf:type gv:Component .
            ?resource gv:hasComplexity ?complexity .
            FILTER(?complexity > 5)
        }
    """ ;
    gv:outputMapping '{"resourceDescriptions": "results"}' ;
    gv:dependsOn ex:identify-complex-resources .

# Step 3: Generate Documentation
ex:generate-documentation rdf:type gv:TemplateStep ;
    gv:text """
        # Complex Resource Documentation
        
        **Generated:** {{ "now" | date("YYYY-MM-DD HH:mm:ss") }}  
        **Hook:** Resource Inspector (DESCRIBE Predicate)  
        **Complex Resources Found:** {{ resourceCount }}
        
        ## Complex Resources Analysis
        
        {% for resource in complexResources %}
        ### {{ resource.resource.value | replace("https://gitvan.dev/component/", "") }}
        - **Complexity Score:** {{ resource.complexity.value }}
        - **Dependencies:** {{ resource.dependencies.value or "0" }}
        - **Resource URI:** {{ resource.resource.value }}
        
        {% endfor %}
        
        ## Resource Descriptions
        
        {% for description in resourceDescriptions %}
        ### {{ description.subject.value }}
        {% for predicate in description.predicates %}
        - **{{ predicate.predicate.value }}:** {{ predicate.object.value }}
        {% endfor %}
        
        {% endfor %}
        
        ## Recommendations
        
        {% for resource in complexResources %}
        {% if resource.complexity.value > 10 %}
        - **{{ resource.resource.value | replace("https://gitvan.dev/component/", "") }}** has very high complexity ({{ resource.complexity.value }}) - consider refactoring
        {% elif resource.complexity.value > 7 %}
        - **{{ resource.resource.value | replace("https://gitvan.dev/component/", "") }}** has high complexity ({{ resource.complexity.value }}) - monitor closely
        {% endif %}
        {% endfor %}
        
        ---
        *This documentation was automatically generated by the Resource Inspector Hook*
    """ ;
    gv:filePath "./docs/complex-resources-{{ 'now' | date('YYYY-MM-DD-HH-mm-ss') }}.md" ;
    gv:dependsOn ex:describe-resources .

# Step 4: Update Resource Registry
ex:update-resource-registry rdf:type gv:TemplateStep ;
    gv:text """
        @prefix gv: <https://gitvan.dev/ontology#> .
        @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
        
        # Resource Registry Update
        # Generated: {{ "now" | date("YYYY-MM-DD HH:mm:ss") }}
        
        {% for resource in complexResources %}
        {{ resource.resource.value }} gv:lastInspected "{{ 'now' | date('YYYY-MM-DDTHH:mm:ssZ') }}"^^xsd:dateTime .
        {{ resource.resource.value }} gv:inspectionComplexity {{ resource.complexity.value }} .
        {{ resource.resource.value }} gv:inspectionDependencies {{ resource.dependencies.value or "0" }} .
        
        {% endfor %}
    """ ;
    gv:filePath "./graph/registry/resource-inspections-{{ 'now' | date('YYYY-MM-DD-HH-mm-ss') }}.ttl" ;
    gv:dependsOn ex:generate-documentation .
