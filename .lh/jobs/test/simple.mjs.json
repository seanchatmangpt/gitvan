{
    "sourceFile": "jobs/test/simple.mjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1758048492139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758097277812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n // GitVan v2 — Simple Test Job\n // Demonstrates basic job functionality\n \n import { defineJob } from \"../../src/jobs/define.mjs\";\n-import { useGit } from \"../../src/composables/git.mjs\";\n+import { useGit } from \"../../src/composables/git/index.mjs\";\n import { useTemplate } from \"../../src/composables/template.mjs\";\n import { promises as fs } from \"node:fs\";\n import { join, dirname } from \"pathe\";\n \n@@ -20,9 +20,9 @@\n     // Log job execution\n     ctx.logger.log(`Running simple test job with payload:`, payload);\n \n     // Get some git info\n-    const branch = await git.getCurrentBranch();\n+    const branch = await git.branch();\n     const head = await git.head();\n     const isClean = await git.isClean();\n \n     // Create a simple report\n"
                },
                {
                    "date": 1758097605040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n     // Log job execution\n     ctx.logger.log(`Running simple test job with payload:`, payload);\n \n     // Get some git info\n-    const branch = await git.branch();\n-    const head = await git.head();\n+    const branch = await git.currentBranch();\n+    const head = await git.currentHead();\n     const isClean = await git.isClean();\n \n     // Create a simple report\n     const reportData = {\n"
                }
            ],
            "date": 1758048492139,
            "name": "Commit-0",
            "content": "// jobs/test/simple.mjs\n// GitVan v2 — Simple Test Job\n// Demonstrates basic job functionality\n\nimport { defineJob } from \"../../src/jobs/define.mjs\";\nimport { useGit } from \"../../src/composables/git.mjs\";\nimport { useTemplate } from \"../../src/composables/template.mjs\";\nimport { promises as fs } from \"node:fs\";\nimport { join, dirname } from \"pathe\";\n\nexport default defineJob({\n  meta: {\n    desc: \"Simple test job that demonstrates basic functionality\",\n    tags: [\"test\", \"demo\"],\n  },\n  async run({ payload, ctx }) {\n    const git = useGit();\n    const template = await useTemplate();\n\n    // Log job execution\n    ctx.logger.log(`Running simple test job with payload:`, payload);\n\n    // Get some git info\n    const branch = await git.getCurrentBranch();\n    const head = await git.head();\n    const isClean = await git.isClean();\n\n    // Create a simple report\n    const reportData = {\n      jobId: ctx.id,\n      timestamp: ctx.nowISO,\n      branch,\n      head: head.substring(0, 8),\n      isClean,\n      payload,\n    };\n\n    // Render template to file\n    const templateContent = `# Test Job Report\n\n**Job ID:** {{ jobId }}\n**Timestamp:** {{ timestamp }}\n**Branch:** {{ branch }}\n**Head:** {{ head }}\n**Clean:** {{ isClean }}\n**Payload:** {{ payload | json(2) }}\n\nGenerated by GitVan Jobs System.\n`;\n\n    const renderedContent = template.renderString(templateContent, reportData);\n\n    // Write to file manually\n    const outputPath = join(ctx.root, \"dist\", \"test-report.md\");\n    await fs.mkdir(dirname(outputPath), { recursive: true });\n    await fs.writeFile(outputPath, renderedContent);\n\n    // Also create a JSON report\n    const jsonReport = {\n      ...reportData,\n      artifacts: [outputPath],\n    };\n\n    return {\n      ok: true,\n      artifacts: [outputPath],\n      data: jsonReport,\n    };\n  },\n});\n"
        }
    ]
}