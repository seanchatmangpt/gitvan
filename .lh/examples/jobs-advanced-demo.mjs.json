{
    "sourceFile": "examples/jobs-advanced-demo.mjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1758048967774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1758048967774,
            "name": "Commit-0",
            "content": "// examples/jobs-advanced-demo.mjs\n// GitVan v2 ‚Äî Advanced Jobs System Demo\n// Demonstrates cron scheduling, event-driven jobs, daemon, and hooks\n\nimport { CronCLI } from \"../src/jobs/cron.mjs\";\nimport { EventCLI } from \"../src/jobs/events.mjs\";\nimport { DaemonCLI } from \"../src/jobs/daemon.mjs\";\nimport { HookCLI, createJobHooks } from \"../src/jobs/hooks.mjs\";\nimport { jobCLI } from \"../src/cli/job.mjs\";\n\nasync function demonstrateAdvancedJobs() {\n  console.log(\"=== GitVan Advanced Jobs System Demo ===\\n\");\n\n  try {\n    // 1. Demonstrate Cron Scheduler\n    console.log(\"1. Cron Scheduler Demo:\");\n    console.log(\"   - Lists scheduled jobs with next execution times\");\n    console.log(\"   - Shows dry run for specific times\");\n    console.log(\"   - Supports complex cron expressions (*/15, 9-17, etc.)\");\n\n    const cronCLI = new CronCLI();\n    await cronCLI.list();\n    console.log(\"\");\n\n    // 2. Demonstrate Event-Driven Jobs\n    console.log(\"2. Event-Driven Jobs Demo:\");\n    console.log(\"   - Evaluates git event predicates\");\n    console.log(\"   - Supports tag creation, path changes, commit messages\");\n    console.log(\"   - Logical operators: any, all\");\n\n    const eventCLI = new EventCLI();\n    await eventCLI.list();\n    console.log(\"\");\n\n    // 3. Demonstrate Hooks System\n    console.log(\"3. Hooks System Demo:\");\n    console.log(\"   - Lifecycle hooks for job execution\");\n    console.log(\"   - Daemon hooks for monitoring\");\n    console.log(\"   - Custom hook implementations\");\n\n    const hookCLI = new HookCLI();\n    hookCLI.list();\n    console.log(\"\");\n\n    // 4. Demonstrate Custom Hooks\n    console.log(\"4. Custom Hooks Demo:\");\n    const customHooks = createJobHooks({\n      hooks: {\n        \"job:before\": async ({ id, payload }) => {\n          console.log(\n            `üîß Custom hook: Starting job ${id} with payload:`,\n            payload,\n          );\n        },\n        \"job:after\": async ({ id, result }) => {\n          console.log(\n            `üîß Custom hook: Job ${id} completed in ${result.duration}ms`,\n          );\n        },\n        \"job:error\": async ({ id, error }) => {\n          console.log(`üîß Custom hook: Job ${id} failed: ${error.message}`);\n        },\n      },\n    });\n\n    // Test custom hooks\n    await customHooks.callHook(\"job:before\", {\n      id: \"demo:custom\",\n      payload: { test: \"custom hook\" },\n    });\n    await customHooks.callHook(\"job:after\", {\n      id: \"demo:custom\",\n      result: { duration: 150 },\n    });\n    console.log(\"\");\n\n    // 5. Demonstrate Daemon Status\n    console.log(\"5. Daemon Status Demo:\");\n    console.log(\"   - Shows daemon configuration and status\");\n    console.log(\"   - Displays job statistics\");\n    console.log(\"   - Monitors git events and cron schedules\");\n\n    const daemonCLI = new DaemonCLI();\n    await daemonCLI.status();\n    await daemonCLI.stats();\n    console.log(\"\");\n\n    // 6. Demonstrate Job Execution with Hooks\n    console.log(\"6. Job Execution with Hooks Demo:\");\n    console.log(\"   - Runs jobs with full hook integration\");\n    console.log(\"   - Shows before/after/error hooks in action\");\n    console.log(\"   - Demonstrates receipt and lock management\");\n\n    try {\n      const result = await jobCLI(\"run\", {\n        id: \"test:simple\",\n        payload: { demo: \"advanced features\" },\n      });\n      console.log(\"‚úÖ Job executed successfully with hooks\");\n    } catch (error) {\n      console.log(\"‚ÑπÔ∏è Job execution skipped (may be locked or not available)\");\n    }\n    console.log(\"\");\n\n    // 7. Demonstrate Hook Statistics\n    console.log(\"7. Hook Statistics Demo:\");\n    hookCLI.stats();\n    console.log(\"\");\n\n    console.log(\"=== Advanced Jobs System Demo Complete ===\");\n    console.log(\"\\nKey Features Demonstrated:\");\n    console.log(\"‚úÖ Cron scheduling with complex expressions\");\n    console.log(\"‚úÖ Event-driven job triggers\");\n    console.log(\"‚úÖ Comprehensive hooks system\");\n    console.log(\"‚úÖ Daemon monitoring and management\");\n    console.log(\"‚úÖ Custom hook implementations\");\n    console.log(\"‚úÖ Job execution with full lifecycle hooks\");\n    console.log(\"‚úÖ Statistics and monitoring\");\n  } catch (error) {\n    console.error(\"‚ùå Advanced jobs demo failed:\", error.message);\n    console.error(error.stack);\n  }\n}\n\n// Run the demonstration\ndemonstrateAdvancedJobs();\n"
        }
    ]
}