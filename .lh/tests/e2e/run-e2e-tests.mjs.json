{
    "sourceFile": "tests/e2e/run-e2e-tests.mjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1758072623003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758072839935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   console.log(\"\");\n \n   const testFiles = [\n     \"tests/e2e/chat-cli.test.mjs\",\n-    \"tests/e2e/cron-cli.test.mjs\", \n+    \"tests/e2e/cron-cli.test.mjs\",\n     \"tests/e2e/daemon-cli.test.mjs\",\n     \"tests/e2e/event-cli.test.mjs\",\n     \"tests/e2e/audit-cli.test.mjs\",\n     \"tests/e2e/llm-cli.test.mjs\",\n@@ -30,21 +30,21 @@\n   let failedTests = 0;\n \n   for (const testFile of testFiles) {\n     console.log(`\\n📋 Running ${testFile}...`);\n-    \n+\n     try {\n       const result = await runTestFile(testFile);\n-      \n+\n       if (result.success) {\n         console.log(`✅ ${testFile} - PASSED`);\n         passedTests += result.testCount;\n       } else {\n         console.log(`❌ ${testFile} - FAILED`);\n         failedTests += result.testCount;\n         console.log(`   Error: ${result.error}`);\n       }\n-      \n+\n       totalTests += result.testCount;\n     } catch (error) {\n       console.log(`❌ ${testFile} - ERROR`);\n       console.log(`   ${error.message}`);\n@@ -57,10 +57,12 @@\n   console.log(\"=\".repeat(50));\n   console.log(`Total Tests: ${totalTests}`);\n   console.log(`Passed: ${passedTests}`);\n   console.log(`Failed: ${failedTests}`);\n-  console.log(`Success Rate: ${totalTests > 0 ? ((passedTests / totalTests) * 100).toFixed(1) : 0}%`);\n-  \n+  console.log(\n+    `Success Rate: ${totalTests > 0 ? ((passedTests / totalTests) * 100).toFixed(1) : 0}%`,\n+  );\n+\n   if (failedTests === 0) {\n     console.log(\"\\n🎉 All E2E tests passed!\");\n     process.exit(0);\n   } else {\n@@ -89,9 +91,9 @@\n \n     child.on(\"close\", (code) => {\n       const output = stdout + stderr;\n       const testCount = (output.match(/✓|×/g) || []).length;\n-      \n+\n       resolve({\n         success: code === 0,\n         testCount,\n         error: code !== 0 ? stderr : null,\n"
                }
            ],
            "date": 1758072623003,
            "name": "Commit-0",
            "content": "// tests/e2e/run-e2e-tests.mjs\n// E2E Test Runner for GitVan v2 CLI Commands\n// Runs all end-to-end tests against the playground environment\n\nimport { spawn } from \"node:child_process\";\nimport { fileURLToPath } from \"node:url\";\nimport { join } from \"pathe\";\n\nconst __dirname = fileURLToPath(new URL(\".\", import.meta.url));\nconst projectRoot = join(__dirname, \"../..\");\n\nasync function runE2ETests() {\n  console.log(\"🚀 Starting GitVan v2 E2E Tests...\");\n  console.log(`📁 Project Root: ${projectRoot}`);\n  console.log(`📁 Playground: ${join(projectRoot, \"playground\")}`);\n  console.log(\"\");\n\n  const testFiles = [\n    \"tests/e2e/chat-cli.test.mjs\",\n    \"tests/e2e/cron-cli.test.mjs\", \n    \"tests/e2e/daemon-cli.test.mjs\",\n    \"tests/e2e/event-cli.test.mjs\",\n    \"tests/e2e/audit-cli.test.mjs\",\n    \"tests/e2e/llm-cli.test.mjs\",\n    \"tests/e2e/cli-integration.test.mjs\",\n  ];\n\n  let totalTests = 0;\n  let passedTests = 0;\n  let failedTests = 0;\n\n  for (const testFile of testFiles) {\n    console.log(`\\n📋 Running ${testFile}...`);\n    \n    try {\n      const result = await runTestFile(testFile);\n      \n      if (result.success) {\n        console.log(`✅ ${testFile} - PASSED`);\n        passedTests += result.testCount;\n      } else {\n        console.log(`❌ ${testFile} - FAILED`);\n        failedTests += result.testCount;\n        console.log(`   Error: ${result.error}`);\n      }\n      \n      totalTests += result.testCount;\n    } catch (error) {\n      console.log(`❌ ${testFile} - ERROR`);\n      console.log(`   ${error.message}`);\n      failedTests++;\n    }\n  }\n\n  console.log(\"\\n\" + \"=\".repeat(50));\n  console.log(\"📊 E2E Test Results Summary\");\n  console.log(\"=\".repeat(50));\n  console.log(`Total Tests: ${totalTests}`);\n  console.log(`Passed: ${passedTests}`);\n  console.log(`Failed: ${failedTests}`);\n  console.log(`Success Rate: ${totalTests > 0 ? ((passedTests / totalTests) * 100).toFixed(1) : 0}%`);\n  \n  if (failedTests === 0) {\n    console.log(\"\\n🎉 All E2E tests passed!\");\n    process.exit(0);\n  } else {\n    console.log(`\\n⚠️  ${failedTests} test(s) failed`);\n    process.exit(1);\n  }\n}\n\nfunction runTestFile(testFile) {\n  return new Promise((resolve) => {\n    const child = spawn(\"npx\", [\"vitest\", \"run\", testFile], {\n      cwd: projectRoot,\n      stdio: [\"pipe\", \"pipe\", \"pipe\"],\n    });\n\n    let stdout = \"\";\n    let stderr = \"\";\n\n    child.stdout.on(\"data\", (data) => {\n      stdout += data.toString();\n    });\n\n    child.stderr.on(\"data\", (data) => {\n      stderr += data.toString();\n    });\n\n    child.on(\"close\", (code) => {\n      const output = stdout + stderr;\n      const testCount = (output.match(/✓|×/g) || []).length;\n      \n      resolve({\n        success: code === 0,\n        testCount,\n        error: code !== 0 ? stderr : null,\n      });\n    });\n\n    child.on(\"error\", (error) => {\n      resolve({\n        success: false,\n        testCount: 0,\n        error: error.message,\n      });\n    });\n  });\n}\n\n// Run the tests\nrunE2ETests().catch((error) => {\n  console.error(\"❌ E2E Test Runner failed:\", error);\n  process.exit(1);\n});\n"
        }
    ]
}