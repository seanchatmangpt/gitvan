@prefix dev: <https://gitvan.dev/developer#> .
@prefix scrum: <https://gitvan.dev/scrum#> .
@prefix gv: <https://gitvan.dev/ontology#> .
@prefix gh: <https://gitvan.dev/graph-hook#> .
@prefix op: <https://gitvan.dev/op#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

# Daily Scrum Preparation Hook
dev:daily-scrum-hook rdf:type gh:Hook ;
    gv:title "Daily Scrum Preparation" ;
    gh:hasPredicate dev:daily-scrum-predicate ;
    gh:orderedPipelines dev:daily-scrum-pipeline .

# Predicate: Check if daily scrum is due
dev:daily-scrum-predicate rdf:type gh:ASKPredicate ;
    gh:queryText """
        PREFIX scrum: <https://gitvan.dev/scrum#>
        PREFIX dev: <https://gitvan.dev/developer#>
        
        ASK WHERE {
            ?developer rdf:type dev:Developer ;
                       dev:lastDailyScrum ?lastScrum .
            ?lastScrum scrum:timestamp ?timestamp .
            # Check if 24 hours have passed
            FILTER (?timestamp < (NOW() - "P1D"^^xsd:duration))
        }
    """ ;
    gh:description "Triggers when daily scrum is due" .

# Daily Scrum Pipeline
dev:daily-scrum-pipeline rdf:type op:Pipeline ;
    op:steps dev:prepare-scrum-notes, dev:review-impediments, dev:update-scrum-status .

# Step 1: Prepare Scrum Notes
dev:prepare-scrum-notes rdf:type gv:ShellStep ;
    gv:command "echo 'Preparing daily scrum notes...'" ;
    gv:description "Prepare notes for daily scrum meeting" .

# Step 2: Review Impediments
dev:review-impediments rdf:type gv:HttpStep ;
    gv:httpUrl "https://api.scrum.com/impediments" ;
    gv:httpMethod "GET" ;
    gv:headers '{"Content-Type": "application/json"}' ;
    gv:body """
        {
            "action": "review-impediments",
            "developer": "{{ developer.id }}",
            "sprint": "{{ sprint.id }}"
        }
    """ ;
    gv:description "Review and identify impediments" ;
    gv:dependsOn dev:prepare-scrum-notes .

# Step 3: Update Scrum Status
dev:update-scrum-status rdf:type gv:HttpStep ;
    gv:httpUrl "https://api.scrum.com/daily-scrum" ;
    gv:httpMethod "POST" ;
    gv:headers '{"Content-Type": "application/json"}' ;
    gv:body """
        {
            "action": "update-scrum-status",
            "developer": "{{ developer.id }}",
            "sprint": "{{ sprint.id }}",
            "completedYesterday": "{{ completedYesterday }}",
            "plannedToday": "{{ plannedToday }}",
            "impediments": "{{ impediments }}"
        }
    """ ;
    gv:description "Update daily scrum status" ;
    gv:dependsOn dev:review-impediments .

